name: Build Executables

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build Binaries
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          arch -${{matrix.arch}} /bin/bash -c "python -m pip install --upgrade pip"
          arch -${{matrix.arch}} /bin/bash -c "pip install pyinstaller"
          arch -${{matrix.arch}} /bin/bash -c "pip install -r requirements.txt"

      - name: Install dependencies (Linux - Windows)
        if: runner.os != 'macOS'
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build binary (Linux)
        if: runner.os == 'Linux'
        run: |
          pyinstaller --windowed --onefile --add-data "resources:resources" main.py

      - name: Build binary (macOS)
        if: runner.os == 'macOS'
        run: |
          arch -${{matrix.arch}} /bin/bash -c 'pyinstaller --windowed --onefile --add-data "resources:resources" main.py'

      - name: Build binary (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller --windowed --onefile --add-data "resources;resources" main.py

      - name: Create universal binary (macOS)
        if: runner.os == 'macOS'
        run: |
          lipo -create -output dist/main_universal dist/main_x86_64 dist/main_arm64

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.arch || 'default' }}
          path: dist/*
      #
      # - name: Upload universal binary (macOS)
      #   if: runner.os == 'macOS' && matrix.arch == 'arm64'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: binaries-macos-universal
      #     path: dist/main_universal
